git 설치 이후/사용자 이름 , 이메일 설정

git config --global user.name "chanyoung" , git config --global user.email "haya9202@gmail.com"

비주얼 스튜디오> 폴더 열기 > 깃이 관리하게 하기 >> 터미널에다 git init 

.gitignore 깃이 관리하지 않게 
 
-관련 명령어

# 모든 file.c 
file.c

# 최상위 폴더의 file.c
/file.c

# 모든 .c 확장자 파일
*.c

# .c 확장자지만 무시하지 않을 파일
!not_ignore_this.c

# logs란 이름의 파일 또는 폴더와 그 내용들
logs

# logs란 이름의 폴더와 그 내용들
logs/

# logs 폴더 바로 안의 debug.log와 .c 파일들
logs/debug.log
logs/*.c	 	



# logs 폴더 바로 안, 또는 그 안의 다른 폴더(들) 안의 debug.log
logs/**/debug.log



캡슐(버전)에 담기 : git add (. 모든 파일 담기)

캡슐 묻기 : git commit -m "커밋 이름"

확인> git log , 소스 트리

+git commit -am "(메시지)" <<add와 commit 한번에 하기 ,

터미널 스크롤 조절 >j,k 

변경사항 확인 > git diff (종료 : :q)

저장 :wq

돌아가기 (리셋) git log 로 커밋해시 확인 후 git reset --hard 커밋해시

git revert 커밋해시

0
아직 커밋되지않은 건 다 지우기 > git reset --hard

git revert --no-commit (되돌릴  커밋 해시) >커밋하지않고 revert

source tree >> reset : ~~브랜치 초기화 ,revert : 커밋 되돌리기

차원(branch)

> git branch ~~ (~~란 이름의 브랜치 생성)
> git branch (브랜치 목록 확인)
> git switch ~~ ( ~~브랜치로 이동)
> git switch -c ~~ (~~생성 후 이동 )
> git branch -m 기존 브랜치명 새 브랜치명 (이름바꾸기)
> git branch -d (삭제할 브랜치) 


브랜치 합치기 : merge (브랜치 사용내역 유지) vs rebase(히스토리 한줄로 유지)

git merge 합칠 브랜치 (현재는 메인 브랜치)

git rebase main (현재는 합쳐질 브랜치)

이후 메인 브런치를 끌어올리려면 메인으로 스위치 후 merge

충돌났을 때 git merge --abort > 다시 원상복귀 (충돌해결이 어려울 때) rebase도 똑같음

충돌 수정 이후 git add . , git commit , :Wq  (rebase 는 git commit 대신 git rebase --continue)

merge = 병합 
rebase = 재배치


git remote add 주소 (orign)
git branch -M main

git push -u orign main (업로드)
git remote (주소 확인)

깃에서 파일 받기 > 원하는 폴더 이동 후 마우스 우클릭> 더많은 옵션 표시 > git dash > git clone http주소

git push > 새로운 항목 업로드 (추가) (내컴퓨터에 있고 깃허브에는 없는 것)

git pull > (내 컴퓨터에 없고 깃허브에 있는거 가져오기)

git pull (먼저 가져오고나서) git push (업로드)

git pull --rebase >선택 > git add . >git rebase --continue

git push --force > 로컬>원격 (나>깃허브) 강제 적용

git push -u origin 브랜치 이름 ( 브랜치 생성)

원격에서 브랜치 가져오기 > git fetch , git switch -t origin/가져올 브랜치









